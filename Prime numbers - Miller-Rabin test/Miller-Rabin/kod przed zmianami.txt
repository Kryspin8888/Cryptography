#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;

int przesuniecie[31] =
{ 1<<0,  1<<1,  1<<2,  1<<3,  1<<4,  1<<5,  1<<6,
1<<7,  1<<8,  1<<9,  1<<10, 1<<11, 1<<12, 1<<13,
1<<14, 1<<15, 1<<16, 1<<17, 1<<18, 1<<19, 1<<20,
1<<21, 1<<22, 1<<23, 1<<24, 1<<25, 1<<26, 1<<27,
1<<28, 1<<29, 1<<30 };

unsigned long long szybk_pot_modulo(short a, int b, short c)
{
unsigned long long wynik = 1;
long int x = a%c;

for (int i=1; i<=b; i<<=1)    // binarne przesuniecie w lewo o jedeno miejsce
    {
    x %= c;
    if ((b&i) != 0)      // iloczyn bitowy rozny od zera
        {
        wynik *= x;
        wynik %= c;
        }
    x *= x;
    }

return wynik;
}

int test_Millera_Rabina(int n,int q, int k)
{
int rozkl1 = 0;
int rozkl2 = 1;
int d, rezultat;

srand(time(NULL));

if (n<4)
    {
    return 1;
    }

while ((rozkl2 & (n-1)) == 0)
    {
    rozkl1  += 1;
    rozkl2 <<= 1;
    }

d = n/rozkl2;

if(k==1)
for (int i=0; i<k; i++)
    {
    if (szybk_pot_modulo(q, d, n) != 1)
        {
        rezultat = 0;

        for (int r=0; r<=rozkl1-1; r++)
            {
cout<<endl<<szybk_pot_modulo(q, przesuniecie[r]*d, n)<<endl;
            if (szybk_pot_modulo(q, przesuniecie[r]*d, n) == n - 1)
                {
                rezultat = 1;
                break;
                }
            }

        if (rezultat == 0)
            {
            return 0;
            }
        }
    }

if(k>1)
for (int i=0; i<k; i++)
    {
    q = 1+(int) ((n-1)*rand()/(RAND_MAX+1.0));
    if (szybk_pot_modulo(q, d, n) != 1)
        {
        rezultat = 0;

        for (int r=0; r<=rozkl1-1; r++)
            {

            if (szybk_pot_modulo(q, przesuniecie[r]*d, n) == n - 1)
                {
                rezultat = 1;
                break;
                }
            }

        if (rezultat == 0)
            {
            return 0;
            }
        }
    }

return 1;
}

int main()
{
int n, k, q;

cout<<"Podaj liczbe do sprawdzenia: "<<endl;
cin>>n;

cout<<"Podaj pierwsza wartosc q: "<<endl;
cin>>q;

cout<<"Podaj dokladnosc sprawdzenia: "<<endl;
cin>>k;

if (test_Millera_Rabina(n,q,k) == 1)
    {
    cout<<endl<<"Liczba jest prawdopodobnie pierwsza "<<endl;
    }
else
    {
    cout<<endl<<"Liczba jest zlozona "<<endl;
    }

return 0;
}
